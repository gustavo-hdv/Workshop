/*
    This file is part of Workshop.

    Workshop is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Workshop is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Workshop. If not, see <https://www.gnu.org/licenses/>

    Contact me:
        Email:   gustavohenrique0008@gmail.com
        Discord: TwoSouls#3428
*/
package user_interface.dialog;

import java.awt.Color;
import user_interface.table_model.AuditHistoryTableModel;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import model.bean.AuditHistory;
import model.bean.Cliente;
import model.bean.Funcionario;
import model.bean.Orcamento;
import model.bean.Produto;
import model.bean.Servico;
import model.bean.User;
import model.bean.Veiculo;

/**
 *
 * @author Gustavo H. D. Ventura
 */
public class AuditHistoryDialog extends javax.swing.JDialog {

    /**
     * Creates new form AuditHistoryDialog
     * @param parent
     * @param modal
     */
    public AuditHistoryDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sideBar = new javax.swing.JPanel();
        audityHistoryPanel = new javax.swing.JPanel();
        audityHistoryLabel = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Auditoria");
        setBackground(new java.awt.Color(192, 192, 192));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setResizable(false);

        sideBar.setBackground(new java.awt.Color(255, 140, 0));
        sideBar.setForeground(new java.awt.Color(255, 140, 0));
        sideBar.setPreferredSize(new java.awt.Dimension(120, 500));

        javax.swing.GroupLayout sideBarLayout = new javax.swing.GroupLayout(sideBar);
        sideBar.setLayout(sideBarLayout);
        sideBarLayout.setHorizontalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 120, Short.MAX_VALUE)
        );
        sideBarLayout.setVerticalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        audityHistoryPanel.setBackground(new java.awt.Color(192, 192, 192));
        audityHistoryPanel.setForeground(new java.awt.Color(255, 69, 0));
        audityHistoryPanel.setMinimumSize(new java.awt.Dimension(574, 100));

        audityHistoryLabel.setBackground(new java.awt.Color(192, 192, 192));
        audityHistoryLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        audityHistoryLabel.setForeground(new java.awt.Color(255, 69, 0));
        audityHistoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        audityHistoryLabel.setText("Hist√≥rico de auditoria");

        javax.swing.GroupLayout audityHistoryPanelLayout = new javax.swing.GroupLayout(audityHistoryPanel);
        audityHistoryPanel.setLayout(audityHistoryPanelLayout);
        audityHistoryPanelLayout.setHorizontalGroup(
            audityHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(audityHistoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(audityHistoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        audityHistoryPanelLayout.setVerticalGroup(
            audityHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(audityHistoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(audityHistoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane.setBackground(new java.awt.Color(192, 192, 192));
        jScrollPane.setForeground(new java.awt.Color(0, 0, 0));

        table.setBackground(new java.awt.Color(222, 222, 222));
        table.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(192, 192, 192), 1, true));
        table.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        table.setForeground(new java.awt.Color(0, 0, 0));
        table.setIntercellSpacing(new Dimension(0, 0));
        table.setRowHeight(25);
        table.setShowVerticalLines(false);
        table.setFont(new Font("Segoe UI", Font.TRUETYPE_FONT, 14));
        table.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 13));
        table.getTableHeader().setForeground(new Color(255,100,0));
        table.setSelectionBackground(new Color(211,211,211));
        table.setSelectionBackground(new Color(255,100,0));
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.LEFT );
        table.setDefaultRenderer(Integer.class, centerRenderer);
        table.setDefaultRenderer(Double.class, centerRenderer);
        table.setDefaultRenderer(Float.class, centerRenderer);
        table.setDefaultRenderer(BigDecimal.class, centerRenderer);
        table.setModel(new javax.swing.table.DefaultTableModel(
        ));
        jScrollPane.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sideBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(audityHistoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sideBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(audityHistoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuditHistoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuditHistoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuditHistoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuditHistoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AuditHistoryDialog dialog = new AuditHistoryDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
                dialog.setVisible(true);
            }
        });
    }
    
    public void populate(Cliente tempCliente, List<AuditHistory> auditHistoryList) {
        
        this.audityHistoryLabel.setText(tempCliente.getNome());
        
        AuditHistoryTableModel model = new AuditHistoryTableModel(auditHistoryList);
        
        table.setModel(model);
        
        TableCellRenderer tableCellRenderer = new user_interface.dialog.DateTimeCellRenderer();
	table.getColumnModel().getColumn(AuditHistoryTableModel.DATE_TIME_COL).setCellRenderer(tableCellRenderer);
    }
    
    public void populate(Produto tempProduto, List<AuditHistory> auditHistoryList) {
        
        this.audityHistoryLabel.setText(tempProduto.getDescricao());
        
        AuditHistoryTableModel model = new AuditHistoryTableModel(auditHistoryList);
        
        table.setModel(model);
        
        TableCellRenderer tableCellRenderer = new user_interface.dialog.DateTimeCellRenderer();
	table.getColumnModel().getColumn(AuditHistoryTableModel.DATE_TIME_COL).setCellRenderer(tableCellRenderer);
    }
    
    public void populate(Servico tempServico, List<AuditHistory> auditHistoryList) {
        
        this.audityHistoryLabel.setText(tempServico.getDescricao());
        
        AuditHistoryTableModel model = new AuditHistoryTableModel(auditHistoryList);
        
        table.setModel(model);
        
        TableCellRenderer tableCellRenderer = new user_interface.dialog.DateTimeCellRenderer();
	table.getColumnModel().getColumn(AuditHistoryTableModel.DATE_TIME_COL).setCellRenderer(tableCellRenderer);
    }
    
    public void populate(Veiculo tempVeiculo, List<AuditHistory> auditHistoryList) {
        
        this.audityHistoryLabel.setText(tempVeiculo.getPlaca() + " - " + tempVeiculo.getDescricao());
        
        AuditHistoryTableModel model = new AuditHistoryTableModel(auditHistoryList);
        
        table.setModel(model);
        
        TableCellRenderer tableCellRenderer = new user_interface.dialog.DateTimeCellRenderer();
	table.getColumnModel().getColumn(AuditHistoryTableModel.DATE_TIME_COL).setCellRenderer(tableCellRenderer);
    }
    
    public void populate(Funcionario tempFuncionario, List<AuditHistory> auditHistoryList) {
        
        this.audityHistoryLabel.setText(tempFuncionario.getNome());
        
        AuditHistoryTableModel model = new AuditHistoryTableModel(auditHistoryList);
        
        table.setModel(model);
        
        TableCellRenderer tableCellRenderer = new user_interface.dialog.DateTimeCellRenderer();
	table.getColumnModel().getColumn(AuditHistoryTableModel.DATE_TIME_COL).setCellRenderer(tableCellRenderer);
    }
    
    public void populate(User tempUser, List<AuditHistory> auditHistoryList) {
        
        this.audityHistoryLabel.setText(tempUser.getLogin());
        
        AuditHistoryTableModel model = new AuditHistoryTableModel(auditHistoryList);
        
        table.setModel(model);
        
        TableCellRenderer tableCellRenderer = new user_interface.dialog.DateTimeCellRenderer();
	table.getColumnModel().getColumn(AuditHistoryTableModel.DATE_TIME_COL).setCellRenderer(tableCellRenderer);
    }
    
    public void populate(Orcamento tempOrcamento, List<AuditHistory> auditHistoryList) {
        
        this.audityHistoryLabel.setText(tempOrcamento.getDefeitosApontados() + " - Placa: " + tempOrcamento.getVeiculo().getPlaca());
        
        AuditHistoryTableModel model = new AuditHistoryTableModel(auditHistoryList);
        
        table.setModel(model);
        
        TableCellRenderer tableCellRenderer = new user_interface.dialog.DateTimeCellRenderer();
	table.getColumnModel().getColumn(AuditHistoryTableModel.DATE_TIME_COL).setCellRenderer(tableCellRenderer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel audityHistoryLabel;
    private javax.swing.JPanel audityHistoryPanel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JPanel sideBar;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}

final class DateTimeCellRenderer extends DefaultTableCellRenderer {
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss aa");

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
	if (value instanceof Date) {
            value = dateFormat.format(value);
	}
	return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
    }
}